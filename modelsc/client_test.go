package modelsc

import (
	"encoding/json"
	"testing"

	"github.com/lasthyphen/coreth/core/types"
)

func TestCollectInsAndOuts(t *testing.T) {
	jsonData := []byte(`{"blockHash":"0xc73bbd4dd5c024d55022be835296d38950e372e3ded2fe1586b41553a08fa4c6","blockNumber":"0x4","contractAddress":"0xb364f7079f08443c17624f3155f726f630a1ce45","cumulativeGasUsed":"0x350692","effectiveGasPrice":"0x66720b300","from":"0x0e455a324ea5eed5b08d477c9ab7b18c6ab8715c","gasUsed":"0x350692","logs":[{"address":"0xb364f7079f08443c17624f3155f726f630a1ce45","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000e455a324ea5eed5b08d477c9ab7b18c6ab8715c"],"data":"0x","blockNumber":"0x4","transactionHash":"0x44e9ce055f239063aeac63792110540d81a13cc047886b5561fe21ee85c9f812","transactionIndex":"0x0","blockHash":"0xc73bbd4dd5c024d55022be835296d38950e372e3ded2fe1586b41553a08fa4c6","logIndex":"0x0","removed":false},{"address":"0xb364f7079f08443c17624f3155f726f630a1ce45","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000e455a324ea5eed5b08d477c9ab7b18c6ab8715c","0x0000000000000000000000000e455a324ea5eed5b08d477c9ab7b18c6ab8715c"],"data":"0x","blockNumber":"0x4","transactionHash":"0x44e9ce055f239063aeac63792110540d81a13cc047886b5561fe21ee85c9f812","transactionIndex":"0x0","blockHash":"0xc73bbd4dd5c024d55022be835296d38950e372e3ded2fe1586b41553a08fa4c6","logIndex":"0x1","removed":false}],"logsBloom":"0xstatus":"0x1","to":null,"transactionHash":"0x44e9ce055f239063aeac63792110540d81a13cc047886b5561fe21ee85c9f812","transactionIndex":"0x0","type":"0x2"}`)

	result := &types.Receipt{}

	if err := json.Unmarshal(jsonData, result); err != nil {
		t.Error(err)
	}

	if result.Type != 2 {
		t.Error("unmarshal failed")
	}
}
